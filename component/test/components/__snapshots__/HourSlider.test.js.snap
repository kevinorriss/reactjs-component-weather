// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should call error callback on external API request error 1`] = `
<HourSlider
  forecastURL=""
  latitude={51.505455}
  longitude={-0.075356}
  onForecastError={
    [MockFunction] {
      "calls": Array [
        Array [
          "Error getting forecast response",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  onForecastReceived={[MockFunction]}
  onSliderChange={[MockFunction]}
>
  <ComponentEnhancer(undefined)
    activeDotStyle={Object {}}
    className=""
    disabled={true}
    dotStyle={Object {}}
    dots={false}
    handle={[Function]}
    handleStyle={
      Array [
        Object {},
      ]
    }
    included={false}
    marks={Object {}}
    max={11}
    min={0}
    onAfterChange={[Function]}
    onBeforeChange={[Function]}
    onChange={[Function]}
    prefixCls="rc-slider"
    railStyle={Object {}}
    reverse={false}
    step={1}
    trackStyle={
      Array [
        Object {},
      ]
    }
    vertical={false}
  >
    <div
      className="rc-slider rc-slider-disabled"
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseUp={[Function]}
      onTouchStart={[Function]}
    >
      <div
        className="rc-slider-rail"
        style={Object {}}
      />
      <Track
        className="rc-slider-track"
        included={false}
        length={0}
        offset={0}
        reverse={false}
        style={Object {}}
        vertical={false}
      />
      <Steps
        activeDotStyle={Object {}}
        dotStyle={Object {}}
        dots={false}
        included={false}
        lowerBound={0}
        marks={Object {}}
        max={11}
        min={0}
        prefixCls="rc-slider"
        reverse={false}
        step={1}
        upperBound={0}
        vertical={false}
      >
        <div
          className="rc-slider-step"
        />
      </Steps>
      <Handle
        className="rc-slider-handle"
        disabled={true}
        key="0"
        max={11}
        min={0}
        offset={0}
        prefixCls="rc-slider"
        reverse={false}
        style={Object {}}
        value={0}
        vertical={false}
      >
        <div
          aria-disabled={true}
          aria-valuemax={11}
          aria-valuemin={0}
          aria-valuenow={0}
          className="rc-slider-handle"
          onBlur={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          role="slider"
          style={
            Object {
              "left": "0%",
              "right": "auto",
              "transform": "translateX(-50%)",
            }
          }
          tabIndex={null}
        />
      </Handle>
      <Marks
        className="rc-slider-mark"
        included={false}
        lowerBound={0}
        marks={Object {}}
        max={11}
        min={0}
        onClickLabel={[Function]}
        reverse={false}
        upperBound={0}
        vertical={false}
      >
        <div
          className="rc-slider-mark"
        />
      </Marks>
    </div>
  </ComponentEnhancer(undefined)>
</HourSlider>
`;

exports[`Should render initial state 1`] = `
<HourSlider
  forecastURL=""
  onForecastError={[MockFunction]}
  onForecastReceived={[MockFunction]}
  onSliderChange={[MockFunction]}
>
  <ComponentEnhancer(undefined)
    activeDotStyle={Object {}}
    className=""
    disabled={true}
    dotStyle={Object {}}
    dots={false}
    handle={[Function]}
    handleStyle={
      Array [
        Object {},
      ]
    }
    included={false}
    marks={Object {}}
    max={11}
    min={0}
    onAfterChange={[Function]}
    onBeforeChange={[Function]}
    onChange={[Function]}
    prefixCls="rc-slider"
    railStyle={Object {}}
    reverse={false}
    step={1}
    trackStyle={
      Array [
        Object {},
      ]
    }
    vertical={false}
  >
    <div
      className="rc-slider rc-slider-disabled"
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseUp={[Function]}
      onTouchStart={[Function]}
    >
      <div
        className="rc-slider-rail"
        style={Object {}}
      />
      <Track
        className="rc-slider-track"
        included={false}
        length={0}
        offset={0}
        reverse={false}
        style={Object {}}
        vertical={false}
      />
      <Steps
        activeDotStyle={Object {}}
        dotStyle={Object {}}
        dots={false}
        included={false}
        lowerBound={0}
        marks={Object {}}
        max={11}
        min={0}
        prefixCls="rc-slider"
        reverse={false}
        step={1}
        upperBound={0}
        vertical={false}
      >
        <div
          className="rc-slider-step"
        />
      </Steps>
      <Handle
        className="rc-slider-handle"
        disabled={true}
        key="0"
        max={11}
        min={0}
        offset={0}
        prefixCls="rc-slider"
        reverse={false}
        style={Object {}}
        value={0}
        vertical={false}
      >
        <div
          aria-disabled={true}
          aria-valuemax={11}
          aria-valuemin={0}
          aria-valuenow={0}
          className="rc-slider-handle"
          onBlur={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          role="slider"
          style={
            Object {
              "left": "0%",
              "right": "auto",
              "transform": "translateX(-50%)",
            }
          }
          tabIndex={null}
        />
      </Handle>
      <Marks
        className="rc-slider-mark"
        included={false}
        lowerBound={0}
        marks={Object {}}
        max={11}
        min={0}
        onClickLabel={[Function]}
        reverse={false}
        upperBound={0}
        vertical={false}
      >
        <div
          className="rc-slider-mark"
        />
      </Marks>
    </div>
  </ComponentEnhancer(undefined)>
</HourSlider>
`;

exports[`should handle valid forecast response 1`] = `
<HourSlider
  forecastURL=""
  latitude={51.505455}
  longitude={-0.075356}
  onForecastError={[MockFunction]}
  onForecastReceived={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "daily": Array [
              Object {
                "icon": "rain",
                "summary": "Light rain",
                "temperatureMax": 13.47,
                "temperatureMin": 6.37,
                "time": 1582416000,
              },
              Object {
                "icon": "cloudy",
                "summary": "Overcast",
                "temperatureMax": 12.42,
                "temperatureMin": 4.23,
                "time": 1582516000,
              },
            ],
            "hourly": Array [
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.85,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582848000,
                "windSpeed": 6.31,
              },
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.82,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582851600,
                "windSpeed": 6.31,
              },
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.82,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582855200,
                "windSpeed": 6.31,
              },
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.82,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582858800,
                "windSpeed": 6.31,
              },
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.82,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582862400,
                "windSpeed": 6.31,
              },
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.82,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582866000,
                "windSpeed": 6.31,
              },
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.82,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582869600,
                "windSpeed": 6.31,
              },
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.82,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582873200,
                "windSpeed": 6.31,
              },
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.82,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582876800,
                "windSpeed": 6.31,
              },
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.82,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582880400,
                "windSpeed": 6.31,
              },
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.82,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582884000,
                "windSpeed": 6.31,
              },
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.82,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582887600,
                "windSpeed": 6.31,
              },
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.82,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582891200,
                "windSpeed": 6.31,
              },
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.82,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582894800,
                "windSpeed": 6.31,
              },
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.82,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582898400,
                "windSpeed": 6.31,
              },
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.82,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582902000,
                "windSpeed": 6.31,
              },
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.82,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582905600,
                "windSpeed": 6.31,
              },
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.82,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582909200,
                "windSpeed": 6.31,
              },
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.82,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582912800,
                "windSpeed": 6.31,
              },
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.82,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582916400,
                "windSpeed": 6.31,
              },
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.82,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582920000,
                "windSpeed": 6.31,
              },
              Object {
                "humidity": 0.82,
                "icon": "rain",
                "precipProbability": 0.82,
                "summary": "Rain",
                "temperature": 7.34,
                "time": 1582923600,
                "windSpeed": 6.31,
              },
            ],
            "timezone": "Europe/London",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  onSliderChange={[MockFunction]}
>
  <ComponentEnhancer(undefined)
    activeDotStyle={Object {}}
    className=""
    disabled={true}
    dotStyle={Object {}}
    dots={false}
    handle={[Function]}
    handleStyle={
      Array [
        Object {},
      ]
    }
    included={false}
    marks={Object {}}
    max={11}
    min={0}
    onAfterChange={[Function]}
    onBeforeChange={[Function]}
    onChange={[Function]}
    prefixCls="rc-slider"
    railStyle={Object {}}
    reverse={false}
    step={1}
    trackStyle={
      Array [
        Object {},
      ]
    }
    vertical={false}
  >
    <div
      className="rc-slider rc-slider-disabled"
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseUp={[Function]}
      onTouchStart={[Function]}
    >
      <div
        className="rc-slider-rail"
        style={Object {}}
      />
      <Track
        className="rc-slider-track"
        included={false}
        length={0}
        offset={0}
        reverse={false}
        style={Object {}}
        vertical={false}
      />
      <Steps
        activeDotStyle={Object {}}
        dotStyle={Object {}}
        dots={false}
        included={false}
        lowerBound={0}
        marks={Object {}}
        max={11}
        min={0}
        prefixCls="rc-slider"
        reverse={false}
        step={1}
        upperBound={0}
        vertical={false}
      >
        <div
          className="rc-slider-step"
        />
      </Steps>
      <Handle
        className="rc-slider-handle"
        disabled={true}
        key="0"
        max={11}
        min={0}
        offset={0}
        prefixCls="rc-slider"
        reverse={false}
        style={Object {}}
        value={0}
        vertical={false}
      >
        <div
          aria-disabled={true}
          aria-valuemax={11}
          aria-valuemin={0}
          aria-valuenow={0}
          className="rc-slider-handle"
          onBlur={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          role="slider"
          style={
            Object {
              "left": "0%",
              "right": "auto",
              "transform": "translateX(-50%)",
            }
          }
          tabIndex={null}
        />
      </Handle>
      <Marks
        className="rc-slider-mark"
        included={false}
        lowerBound={0}
        marks={Object {}}
        max={11}
        min={0}
        onClickLabel={[Function]}
        reverse={false}
        upperBound={0}
        vertical={false}
      >
        <div
          className="rc-slider-mark"
        />
      </Marks>
    </div>
  </ComponentEnhancer(undefined)>
</HourSlider>
`;

exports[`should handle when response contains less hourly data than expected 1`] = `
<HourSlider
  forecastURL=""
  latitude={51.505455}
  longitude={-0.075356}
  onForecastError={
    [MockFunction] {
      "calls": Array [
        Array [
          "Hourly forecast not covered",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  onForecastReceived={[MockFunction]}
  onSliderChange={[MockFunction]}
>
  <ComponentEnhancer(undefined)
    activeDotStyle={Object {}}
    className=""
    disabled={true}
    dotStyle={Object {}}
    dots={false}
    handle={[Function]}
    handleStyle={
      Array [
        Object {},
      ]
    }
    included={false}
    marks={Object {}}
    max={11}
    min={0}
    onAfterChange={[Function]}
    onBeforeChange={[Function]}
    onChange={[Function]}
    prefixCls="rc-slider"
    railStyle={Object {}}
    reverse={false}
    step={1}
    trackStyle={
      Array [
        Object {},
      ]
    }
    vertical={false}
  >
    <div
      className="rc-slider rc-slider-disabled"
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseUp={[Function]}
      onTouchStart={[Function]}
    >
      <div
        className="rc-slider-rail"
        style={Object {}}
      />
      <Track
        className="rc-slider-track"
        included={false}
        length={0}
        offset={0}
        reverse={false}
        style={Object {}}
        vertical={false}
      />
      <Steps
        activeDotStyle={Object {}}
        dotStyle={Object {}}
        dots={false}
        included={false}
        lowerBound={0}
        marks={Object {}}
        max={11}
        min={0}
        prefixCls="rc-slider"
        reverse={false}
        step={1}
        upperBound={0}
        vertical={false}
      >
        <div
          className="rc-slider-step"
        />
      </Steps>
      <Handle
        className="rc-slider-handle"
        disabled={true}
        key="0"
        max={11}
        min={0}
        offset={0}
        prefixCls="rc-slider"
        reverse={false}
        style={Object {}}
        value={0}
        vertical={false}
      >
        <div
          aria-disabled={true}
          aria-valuemax={11}
          aria-valuemin={0}
          aria-valuenow={0}
          className="rc-slider-handle"
          onBlur={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          role="slider"
          style={
            Object {
              "left": "0%",
              "right": "auto",
              "transform": "translateX(-50%)",
            }
          }
          tabIndex={null}
        />
      </Handle>
      <Marks
        className="rc-slider-mark"
        included={false}
        lowerBound={0}
        marks={Object {}}
        max={11}
        min={0}
        onClickLabel={[Function]}
        reverse={false}
        upperBound={0}
        vertical={false}
      >
        <div
          className="rc-slider-mark"
        />
      </Marks>
    </div>
  </ComponentEnhancer(undefined)>
</HourSlider>
`;
